version: '3.8'

services:
  flarecert:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flarecert
    restart: unless-stopped
    environment:
      # Cloudflare credentials
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      
      # ACME settings
      - ACME_EMAIL=${ACME_EMAIL}
      - ACME_SERVER=${ACME_SERVER:-https://acme-v02.api.letsencrypt.org/directory}
      
      # Certificate settings
      - CERT_DIR=/certs
      - DNS_PROPAGATION_TIMEOUT=${DNS_PROPAGATION_TIMEOUT:-300}
    volumes:
      # Certificate storage
      - ./certs:/certs:rw
      # Configuration (if you want to mount config files)
      - ./config:/config:ro
    command: ["cert", "--help"]
    # For one-time certificate generation, you can override with:
    # docker-compose run --rm flarecert cert --domain example.com --staging

  # Alternative service for certificate renewal (cron-like)
  flarecert-renew:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flarecert-renew
    restart: "no"  # Only run when explicitly started
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - ACME_EMAIL=${ACME_EMAIL}
      - ACME_SERVER=${ACME_SERVER:-https://acme-v02.api.letsencrypt.org/directory}
      - CERT_DIR=/certs
      - DNS_PROPAGATION_TIMEOUT=${DNS_PROPAGATION_TIMEOUT:-300}
    volumes:
      - ./certs:/certs:rw
    command: ["renew", "--verbose"]
    profiles: ["renew"]  # Only start with: docker-compose --profile renew up

  # Example: nginx service using generated certificates
  nginx:
    image: nginx:alpine
    container_name: nginx-ssl
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
    depends_on:
      - flarecert
    profiles: ["nginx"]  # Only start with: docker-compose --profile nginx up

volumes:
  certs:
    driver: local
