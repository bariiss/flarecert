events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;

    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name example.com www.example.com;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name example.com www.example.com;

        # SSL certificates from FlareCert
        ssl_certificate /etc/ssl/certs/example.com/current/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/example.com/current/privkey.pem;

        # HSTS (optional)
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Root directory
        root /var/www/html;
        index index.html index.htm;

        # Basic location
        location / {
            try_files $uri $uri/ =404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Example proxy pass (uncomment if needed)
        # location /api/ {
        #     proxy_pass http://backend:3000/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
        # }
    }

    # Example wildcard certificate usage
    server {
        listen 443 ssl http2;
        server_name *.example.com;

        # Wildcard SSL certificates from FlareCert
        ssl_certificate /etc/ssl/certs/wildcard.example.com/current/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/wildcard.example.com/current/privkey.pem;

        add_header Strict-Transport-Security "max-age=31536000" always;

        # Handle subdomains
        location / {
            return 200 "Subdomain: $host\n";
            add_header Content-Type text/plain;
        }
    }
}
